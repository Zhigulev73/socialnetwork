[{"D:\\work\\react-pract\\social-network\\src\\serviceWorker.js":"1","D:\\work\\react-pract\\social-network\\src\\components\\Navbar\\Navbar.tsx":"2","D:\\work\\react-pract\\social-network\\src\\components\\Header\\Header.tsx":"3","D:\\work\\react-pract\\social-network\\src\\components\\Profile\\Profile.tsx":"4","D:\\work\\react-pract\\social-network\\src\\components\\Dialogs\\Dialogs.tsx":"5","D:\\work\\react-pract\\social-network\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"6","D:\\work\\react-pract\\social-network\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"7","D:\\work\\react-pract\\social-network\\src\\components\\Dialogs\\Message\\Message.tsx":"8","D:\\work\\react-pract\\social-network\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx":"9","D:\\work\\react-pract\\social-network\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"10","D:\\work\\react-pract\\social-network\\src\\redux\\profile-reducer.ts":"11","D:\\work\\react-pract\\social-network\\src\\redux\\dialogs-reducer.ts":"12","D:\\work\\react-pract\\social-network\\src\\redux\\sidebar-reducer.ts":"13","D:\\work\\react-pract\\social-network\\src\\redux\\redux-store.ts":"14","D:\\work\\react-pract\\social-network\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx":"15","D:\\work\\react-pract\\social-network\\src\\components\\Dialogs\\DialogsContainer.tsx":"16","D:\\work\\react-pract\\social-network\\src\\components\\Users\\UsersContainer.tsx":"17","D:\\work\\react-pract\\social-network\\src\\redux\\users-reducer.ts":"18","D:\\work\\react-pract\\social-network\\src\\components\\Users\\Users.tsx":"19","D:\\work\\react-pract\\social-network\\src\\components\\Profile\\ProfileContainer.tsx":"20","D:\\work\\react-pract\\social-network\\src\\redux\\auth-reducer.ts":"21","D:\\work\\react-pract\\social-network\\src\\api\\api.ts":"22","D:\\work\\react-pract\\social-network\\src\\hoc\\withAuthRedirect.tsx":"23","D:\\work\\react-pract\\social-network\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.tsx":"24","D:\\work\\react-pract\\social-network\\src\\components\\Login\\Login.tsx":"25","D:\\work\\react-pract\\social-network\\src\\redux\\app-reducer.ts":"26","D:\\work\\react-pract\\social-network\\src\\redux\\users-selectors.ts":"27","D:\\work\\react-pract\\social-network\\src\\utils\\object-helpers.ts":"28","D:\\work\\react-pract\\social-network\\src\\components\\Users\\User.tsx":"29","D:\\work\\react-pract\\social-network\\src\\index.tsx":"30","D:\\work\\react-pract\\social-network\\src\\components\\Profile\\ProfileInfo\\ProfileDataForm.tsx":"31","D:\\work\\react-pract\\social-network\\src\\components\\common\\Paginator\\Paginator.tsx":"32","D:\\work\\react-pract\\social-network\\src\\api\\security-api.ts":"33","D:\\work\\react-pract\\social-network\\src\\api\\users-api.ts":"34","D:\\work\\react-pract\\social-network\\src\\api\\auth-api.ts":"35","D:\\work\\react-pract\\social-network\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.tsx":"36","D:\\work\\react-pract\\social-network\\src\\hoc\\withSuspense.tsx":"37","D:\\work\\react-pract\\social-network\\src\\utils\\validators\\validators.ts":"38","D:\\work\\react-pract\\social-network\\src\\components\\Profile\\MyPosts\\AddPostForm\\AddPostForm.tsx":"39","D:\\work\\react-pract\\social-network\\src\\api\\profile-api.ts":"40","D:\\work\\react-pract\\social-network\\src\\components\\common\\Preloader\\Preloader.tsx":"41","D:\\work\\react-pract\\social-network\\src\\components\\Dialogs\\AddMessageForm\\AddMessageForm.tsx":"42","D:\\work\\react-pract\\social-network\\src\\components\\Users\\UsersSearchForm.tsx":"43","D:\\work\\react-pract\\social-network\\src\\App.tsx":"44","D:\\work\\react-pract\\social-network\\src\\redux\\auth-selectors.ts":"45","D:\\work\\react-pract\\social-network\\src\\pages\\Chat\\ChatPage.tsx":"46","D:\\work\\react-pract\\social-network\\src\\components\\common\\FormsControls\\FormsControls.tsx":"47"},{"size":5083,"mtime":1616752337283,"results":"48","hashOfConfig":"49"},{"size":984,"mtime":1616753084722,"results":"50","hashOfConfig":"49"},{"size":1986,"mtime":1616842812297,"results":"51","hashOfConfig":"49"},{"size":918,"mtime":1616752337271,"results":"52","hashOfConfig":"49"},{"size":1360,"mtime":1616752337263,"results":"53","hashOfConfig":"49"},{"size":1341,"mtime":1616179485533,"results":"54","hashOfConfig":"49"},{"size":3227,"mtime":1616752337272,"results":"55","hashOfConfig":"49"},{"size":257,"mtime":1616752337264,"results":"56","hashOfConfig":"49"},{"size":424,"mtime":1616752337263,"results":"57","hashOfConfig":"49"},{"size":485,"mtime":1616752337271,"results":"58","hashOfConfig":"49"},{"size":3831,"mtime":1616752337281,"results":"59","hashOfConfig":"49"},{"size":1358,"mtime":1616752337281,"results":"60","hashOfConfig":"49"},{"size":189,"mtime":1616752337282,"results":"61","hashOfConfig":"49"},{"size":1347,"mtime":1616752543334,"results":"62","hashOfConfig":"49"},{"size":567,"mtime":1616752337270,"results":"63","hashOfConfig":"49"},{"size":546,"mtime":1616752337263,"results":"64","hashOfConfig":"49"},{"size":521,"mtime":1616765749635,"results":"65","hashOfConfig":"49"},{"size":4836,"mtime":1616761929648,"results":"66","hashOfConfig":"49"},{"size":3166,"mtime":1616841128607,"results":"67","hashOfConfig":"49"},{"size":2764,"mtime":1616752337271,"results":"68","hashOfConfig":"49"},{"size":2904,"mtime":1616752337279,"results":"69","hashOfConfig":"49"},{"size":677,"mtime":1616762251042,"results":"70","hashOfConfig":"49"},{"size":921,"mtime":1616752337277,"results":"71","hashOfConfig":"49"},{"size":1113,"mtime":1615807566822,"results":"72","hashOfConfig":"49"},{"size":2444,"mtime":1616766407258,"results":"73","hashOfConfig":"49"},{"size":944,"mtime":1616754643380,"results":"74","hashOfConfig":"49"},{"size":934,"mtime":1616761929648,"results":"75","hashOfConfig":"49"},{"size":267,"mtime":1616752337284,"results":"76","hashOfConfig":"49"},{"size":1865,"mtime":1616765569212,"results":"77","hashOfConfig":"49"},{"size":492,"mtime":1616752337278,"results":"78","hashOfConfig":"49"},{"size":1925,"mtime":1616752337272,"results":"79","hashOfConfig":"49"},{"size":1826,"mtime":1616752337276,"results":"80","hashOfConfig":"49"},{"size":263,"mtime":1616752337260,"results":"81","hashOfConfig":"49"},{"size":660,"mtime":1616761520182,"results":"82","hashOfConfig":"49"},{"size":767,"mtime":1616752337260,"results":"83","hashOfConfig":"49"},{"size":1229,"mtime":1616752337273,"results":"84","hashOfConfig":"49"},{"size":289,"mtime":1616752337277,"results":"85","hashOfConfig":"49"},{"size":401,"mtime":1616752337285,"results":"86","hashOfConfig":"49"},{"size":979,"mtime":1616752337270,"results":"87","hashOfConfig":"49"},{"size":1110,"mtime":1616752337260,"results":"88","hashOfConfig":"49"},{"size":288,"mtime":1616752337277,"results":"89","hashOfConfig":"49"},{"size":1144,"mtime":1616752543332,"results":"90","hashOfConfig":"49"},{"size":1884,"mtime":1616838896774,"results":"91","hashOfConfig":"49"},{"size":5873,"mtime":1616854208024,"results":"92","hashOfConfig":"49"},{"size":238,"mtime":1616842047941,"results":"93","hashOfConfig":"49"},{"size":1768,"mtime":1616856846191,"results":"94","hashOfConfig":"49"},{"size":1891,"mtime":1616752543334,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"86in82",{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"110"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"103"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"103"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"110"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"106"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"103"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"103"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"110"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\work\\react-pract\\social-network\\src\\serviceWorker.js",[],["204","205"],"D:\\work\\react-pract\\social-network\\src\\components\\Navbar\\Navbar.tsx",["206","207","208"],"D:\\work\\react-pract\\social-network\\src\\components\\Header\\Header.tsx",[],["209","210"],"D:\\work\\react-pract\\social-network\\src\\components\\Profile\\Profile.tsx",[],["211","212"],"D:\\work\\react-pract\\social-network\\src\\components\\Dialogs\\Dialogs.tsx",["213"],"import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\nimport {InitialStateType} from '../../redux/dialogs-reducer';\r\n\r\ntype PropsType = {\r\n    dialogsPage: InitialStateType\r\n    sendMessage: (messageText: string) => void\r\n}\r\n\r\nexport type NewMessageFormValuesType = {\r\n    newMessageBody: string\r\n}\r\n\r\nconst Dialogs: React.FC<PropsType> = (props) => {\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map( d => <DialogItem name={d.name} key={d.id} id={d.id} />  );\r\n    let messagesElements = state.messages.map( m => <Message message={m.message} key={m.id} /> );\r\n\r\n    let addNewMessage = (values: NewMessageFormValuesType) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                { dialogsElements }\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{ messagesElements }</div>\r\n            </div>\r\n            <AddMessageForm onSubmit={addNewMessage} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",["214","215"],"D:\\work\\react-pract\\social-network\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",[],["216","217"],"D:\\work\\react-pract\\social-network\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx",["218"],"D:\\work\\react-pract\\social-network\\src\\components\\Dialogs\\Message\\Message.tsx",[],"D:\\work\\react-pract\\social-network\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx",[],"D:\\work\\react-pract\\social-network\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",["219"],"D:\\work\\react-pract\\social-network\\src\\redux\\profile-reducer.ts",["220","221"],"import {FormAction, stopSubmit} from \"redux-form\";\r\nimport {PhotosType, PostType, ProfileType} from '../types/types';\r\nimport {usersAPI} from '../api/users-api';\r\nimport {profileAPI} from '../api/profile-api';\r\nimport {BaseThunkType, InferActionsTypes} from './redux-store';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n        {id: 3, message: 'Blabla', likesCount: 11},\r\n        {id: 4, message: 'Dada', likesCount: 11}\r\n    ] as Array<PostType>,\r\n    profile: null as ProfileType | null,\r\n    status: '',\r\n}\r\n\r\nconst profileReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case 'SN/PROFILE/ADD-POST': {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            };\r\n        }\r\n        case 'SN/PROFILE/SET_STATUS': {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case 'SN/PROFILE/SET_USER_PROFILE': {\r\n            return {...state, profile: action.profile}\r\n        }\r\n\r\n        case 'SN/PROFILE/DELETE_POST':\r\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)}\r\n\r\n        case 'SN/PROFILE/SAVE_PHOTO_SUCCESS':\r\n            return {...state, profile: {...state.profile, photos: action.photos} as ProfileType}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const actions = {\r\n    addPostActionCreator: (newPostText: string) => ({type: 'SN/PROFILE/ADD-POST', newPostText} as const),\r\n    setUserProfile: (profile: ProfileType) => ({type: 'SN/PROFILE/SET_USER_PROFILE', profile} as const),\r\n    setStatus: (status: string) => ({type: 'SN/PROFILE/SET_STATUS', status} as const),\r\n    deletePost: (postId: number) => ({type: 'SN/PROFILE/DELETE_POST', postId} as const),\r\n    savePhotoSuccess: (photos: PhotosType) => ({type: 'SN/PROFILE/SAVE_PHOTO_SUCCESS', photos} as const)\r\n}\r\n\r\nexport const getUserProfile = (userId: number): ThunkType => async (dispatch) => {\r\n    const data = await profileAPI.getProfile(userId)\r\n    dispatch(actions.setUserProfile(data))\r\n}\r\n\r\nexport const getStatus = (userId: number): ThunkType => async (dispatch) => {\r\n    let data = await profileAPI.getStatus(userId)\r\n    dispatch(actions.setStatus(data))\r\n}\r\n\r\nexport const updateStatus = (status: string): ThunkType => async (dispatch) => {\r\n    try {\r\n        let data = await profileAPI.updateStatus(status)\r\n\r\n        if (data.resultCode === 0) {\r\n            dispatch(actions.setStatus(status))\r\n        }\r\n    } catch(error) {\r\n        //\r\n    }\r\n}\r\n\r\nexport const savePhoto = (file: File): ThunkType => async (dispatch) => {\r\n    let data = await profileAPI.savePhoto(file)\r\n\r\n    if (data.resultCode === 0) {\r\n        dispatch(actions.savePhotoSuccess(data.data.photos))\r\n    }\r\n}\r\n\r\nexport const saveProfile = (profile: ProfileType): ThunkType => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId\r\n    const data = await profileAPI.saveProfile(profile)\r\n\r\n    if (data.resultCode === 0) {\r\n        if (userId != null) {\r\n            dispatch(getUserProfile(userId))\r\n        } else {\r\n            throw new Error(\"userId can't be null\")\r\n        }\r\n    } else {\r\n        dispatch(stopSubmit(\"edit-profile\", {_error: data.messages[0] }))\r\n        return Promise.reject(data.messages[0])\r\n    }\r\n}\r\n\r\nexport default profileReducer\r\n\r\nexport type InitialStateType = typeof initialState\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsType | FormAction>\r\n","D:\\work\\react-pract\\social-network\\src\\redux\\dialogs-reducer.ts",[],"D:\\work\\react-pract\\social-network\\src\\redux\\sidebar-reducer.ts",["222"],"let initialState = {}\r\ntype InitialStateType = typeof initialState\r\nconst sidebarReducer = (state = initialState, action: any) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;\r\n","D:\\work\\react-pract\\social-network\\src\\redux\\redux-store.ts",[],"D:\\work\\react-pract\\social-network\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx",["223"],"import React from 'react';\r\nimport {actions} from \"../../../redux/profile-reducer\";\r\nimport MyPosts, {DispatchPropsType, MapPropsType} from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from '../../../redux/redux-store';\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        posts: state.profilePage.posts\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect<MapPropsType, DispatchPropsType, {}, AppStateType>(mapStateToProps, {\r\n    addPost: actions.addPostActionCreator\r\n})(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","D:\\work\\react-pract\\social-network\\src\\components\\Dialogs\\DialogsContainer.tsx",[],"D:\\work\\react-pract\\social-network\\src\\components\\Users\\UsersContainer.tsx",[],"D:\\work\\react-pract\\social-network\\src\\redux\\users-reducer.ts",["224","225"],"import {updateObjectInArray} from '../utils/object-helpers'\r\nimport {UserType} from '../types/types'\r\nimport {BaseThunkType, InferActionsTypes} from './redux-store'\r\nimport {Dispatch} from 'redux'\r\nimport {usersAPI} from '../api/users-api'\r\nimport {APIResponseType} from '../api/api'\r\n\r\nlet initialState = {\r\n    users: [] as Array<UserType>,\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [] as Array<number>, //array of users ids,\r\n    filter: {\r\n        term: '',\r\n        friend: null as null | boolean\r\n    }\r\n}\r\n\r\nconst usersReducer = (state = initialState, action: ActionsTypes): InitialState => {\r\n    switch (action.type) {\r\n        case 'SN/USERS/FOLLOW':\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\r\n            }\r\n        case 'SN/USERS/UNFOLLOW':\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\r\n            }\r\n        case 'SN/USERS/SET_USERS': {\r\n            return {...state, users: action.users}\r\n        }\r\n        case 'SN/USERS/SET_CURRENT_PAGE': {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case 'SN/USERS/SET_TOTAL_USERS_COUNT': {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case 'SN/USERS/TOGGLE_IS_FETCHING': {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case 'SN/USERS/SET_FILTER': {\r\n            return {...state, filter: action.payload}\r\n        }\r\n        case 'SN/USERS/TOGGLE_IS_FOLLOWING_PROGRESS': {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    followSuccess: (userId: number) => ({type: 'SN/USERS/FOLLOW', userId} as const),\r\n    unfollowSuccess: (userId: number) => ({type: 'SN/USERS/UNFOLLOW', userId} as const),\r\n    setUsers: (users: Array<UserType>) => ({type: 'SN/USERS/SET_USERS', users} as const),\r\n    setCurrentPage: (currentPage: number) => ({type: 'SN/USERS/SET_CURRENT_PAGE', currentPage} as const),\r\n    setFilter: (filter: FilterType) => ({type: 'SN/USERS/SET_FILTER', payload: filter} as const),\r\n    setTotalUsersCount: (totalUsersCount: number) => ({\r\n        type: 'SN/USERS/SET_TOTAL_USERS_COUNT',\r\n        count: totalUsersCount\r\n    } as const),\r\n    toggleIsFetching: (isFetching: boolean) => ({\r\n        type: 'SN/USERS/TOGGLE_IS_FETCHING',\r\n        isFetching\r\n    } as const),\r\n    toggleFollowingProgress: (isFetching: boolean, userId: number) => ({\r\n        type: 'SN/USERS/TOGGLE_IS_FOLLOWING_PROGRESS',\r\n        isFetching,\r\n        userId\r\n    } as const)\r\n}\r\n\r\nexport const requestUsers = (page: number,\r\n                             pageSize: number, filter: FilterType): ThunkType => {\r\n    return async (dispatch, getState) => {\r\n        dispatch(actions.toggleIsFetching(true))\r\n        dispatch(actions.setCurrentPage(page))\r\n        dispatch(actions.setFilter(filter))\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize, filter.term, filter.friend)\r\n        dispatch(actions.toggleIsFetching(false))\r\n        dispatch(actions.setUsers(data.items))\r\n        dispatch(actions.setTotalUsersCount(data.totalCount))\r\n    }\r\n}\r\n\r\nconst _followUnfollowFlow = async (dispatch: Dispatch<ActionsTypes>,\r\n                                   userId: number,\r\n                                   apiMethod: (userId: number) => Promise<APIResponseType>,\r\n                                   actionCreator: (userId: number) => ActionsTypes) => {\r\n    dispatch(actions.toggleFollowingProgress(true, userId))\r\n    let response = await apiMethod(userId)\r\n\r\n    if (response.resultCode == 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(actions.toggleFollowingProgress(false, userId))\r\n}\r\n\r\nexport const follow = (userId: number): ThunkType => {\r\n    return async (dispatch) => {\r\n        await _followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), actions.followSuccess)\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId: number): ThunkType => {\r\n    return async (dispatch) => {\r\n        await _followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), actions.unfollowSuccess)\r\n    }\r\n}\r\n\r\nexport default usersReducer\r\n\r\nexport type InitialState = typeof initialState\r\nexport type FilterType = typeof initialState.filter\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsTypes>\r\n","D:\\work\\react-pract\\social-network\\src\\components\\Users\\Users.tsx",["226","227"],"import React, {FC, useEffect} from 'react'\r\nimport Paginator from '../common/Paginator/Paginator'\r\nimport User from './User'\r\nimport {UsersSearchForm} from './UsersSearchForm'\r\nimport {FilterType, requestUsers} from '../../redux/users-reducer'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers,\r\n    getUsersFilter\r\n} from \"../../redux/users-selectors\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport * as queryString from \"querystring\";\r\n\r\ntype PropsType = {}\r\n\r\n\r\nexport const Users: FC<PropsType> = (props) => {\r\n\r\n    const users = useSelector(getUsers)\r\n    const totalUsersCount = useSelector(getTotalUsersCount)\r\n    const currentPage = useSelector(getCurrentPage)\r\n    const pageSize = useSelector(getPageSize)\r\n    const filter = useSelector(getUsersFilter)\r\n    const followingInProgress = useSelector(getFollowingInProgress)\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        const parsed = queryString.parse(history.location.search.substr(1)) as {term: string, page: string, friend: string}\r\n\r\n        let actualPage = currentPage\r\n        let actualFilter = filter\r\n        if(!!parsed.page) actualPage = Number(parsed.page)\r\n        if(!!parsed.term) actualFilter = {...actualFilter, term: parsed.term as string}\r\n        switch (parsed.friend) {\r\n            case 'null':\r\n                actualFilter = {...actualFilter, friend: null}\r\n                break;\r\n            case 'true':\r\n                actualFilter = {...actualFilter, friend: true}\r\n                break;\r\n            case 'false':\r\n                actualFilter = {...actualFilter, friend: false}\r\n                break;\r\n\r\n        }\r\n\r\n        dispatch(requestUsers(actualPage, pageSize, actualFilter))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        history.push({\r\n            pathname: '/developers',\r\n            search: `?term=${filter.term}&friend=${filter.friend}&page=${currentPage}`\r\n        })\r\n    }, [filter, currentPage])\r\n\r\n    const onFilterChanged = (filter: FilterType) => {\r\n        dispatch(requestUsers(1, pageSize, filter))\r\n    }\r\n\r\n    const onPageChanged = (pageNumber: number) => {\r\n        dispatch(requestUsers(pageNumber, pageSize, filter))\r\n    }\r\n\r\n    const unfollow = (userId: number) => {\r\n        dispatch(unfollow(userId))\r\n    }\r\n    const follow = (userId: number) => {\r\n        dispatch(follow(userId))\r\n    }\r\n\r\n\r\n    return <div>\r\n\r\n        <UsersSearchForm onFilterChanged={onFilterChanged}/>\r\n\r\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                   totalItemsCount={totalUsersCount} pageSize={pageSize}/>\r\n        <div>\r\n            {\r\n                users.map(u => <User user={u}\r\n                                     followingInProgress={followingInProgress}\r\n                                     key={u.id}\r\n                                     unfollow={unfollow}\r\n                                     follow={follow}\r\n                    />\r\n                )\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\n","D:\\work\\react-pract\\social-network\\src\\components\\Profile\\ProfileContainer.tsx",["228","229"],"import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter, RouteComponentProps} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport {ProfileType} from '../../types/types';\r\n\r\ntype MapPropsType = ReturnType<typeof mapStateToProps>\r\ntype DispatchPropsType = {\r\n    getUserProfile: (userId: number) => void\r\n    getStatus: (userId: number) => void\r\n    updateStatus: (status: string) => void\r\n    savePhoto: (file: File) => void\r\n    saveProfile: (profile: ProfileType) => Promise<any>\r\n}\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\n\r\ntype PropsType = MapPropsType & DispatchPropsType & RouteComponentProps<PathParamsType>;\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n    constructor(props: PropsType) {\r\n        super(props);\r\n    }\r\n\r\n    refreshProfile() {\r\n        let userId: number | null = +this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                // todo: may be replace push with Redirect??\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n\r\n        if (!userId) {\r\n            console.error(\"ID should exists in URI params or in state ('authorizedUserId')\");\r\n        } else {\r\n            this.props.getUserProfile(userId)\r\n            this.props.getStatus(userId)\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps: PropsType, prevState: PropsType) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount(): void {\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner={!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     savePhoto={this.props.savePhoto}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    //console.log('mapStateToProps PROFILE')\r\n    return ({\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    })\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter\r\n)(ProfileContainer);\r\n\r\n\r\n\r\n\r\n","D:\\work\\react-pract\\social-network\\src\\redux\\auth-reducer.ts",["230"],"import {ResultCodeForCapcthaEnum, ResultCodesEnum} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {authAPI} from '../api/auth-api';\r\nimport {securityAPI} from '../api/security-api';\r\nimport {BaseThunkType, InferActionsTypes} from './redux-store';\r\nimport {Action} from 'redux';\r\nimport {FormAction} from 'redux-form/lib/actions';\r\n\r\nlet initialState = {\r\n    userId: null as (number | null),\r\n    email: null as string | null,\r\n    login: null as string | null,\r\n    isAuth: false,\r\n    captchaUrl: null as string | null// if null, then captcha is not required\r\n};\r\n\r\nconst authReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SN/auth/SET_USER_DATA':\r\n        case 'SN/auth/GET_CAPTCHA_URL_SUCCESS':\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    setAuthUserData: (userId: number | null, email: string | null, login: string | null, isAuth: boolean) => ({\r\n        type: 'SN/auth/SET_USER_DATA', payload: {userId, email, login, isAuth}\r\n    } as const),\r\n    getCaptchaUrlSuccess: (captchaUrl: string) => ({\r\n        type: 'SN/auth/GET_CAPTCHA_URL_SUCCESS', payload: {captchaUrl}\r\n    } as const)\r\n}\r\n\r\nexport const getAuthUserData = (): ThunkType => async (dispatch) => {\r\n    let meData = await authAPI.me()\r\n    if (meData.resultCode === ResultCodesEnum.Success) {\r\n        let {id, login, email} = meData.data;\r\n        dispatch(actions.setAuthUserData(id, email, login, true))\r\n    }\r\n}\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: string): ThunkType => async (dispatch) => {\r\n    let data = await authAPI.login(email, password, rememberMe, captcha);\r\n    if (data.resultCode === ResultCodesEnum.Success) {\r\n        // success, get auth data\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        if (data.resultCode === ResultCodeForCapcthaEnum.CaptchaIsRequired) {\r\n            dispatch(getCaptchaUrl());\r\n        }\r\n\r\n        let message = data.messages.length > 0 ? data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = (): ThunkType => async (dispatch) => {\r\n    const data = await securityAPI.getCaptchaUrl()\r\n    const captchaUrl = data.url\r\n    dispatch(actions.getCaptchaUrlSuccess(captchaUrl))\r\n}\r\n\r\nexport const logout = (): ThunkType => async (dispatch: any) => {\r\n    let response = await authAPI.logout()\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actions.setAuthUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\nexport default authReducer;\r\n\r\nexport type InitialStateType = typeof initialState;\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsType | FormAction>\r\n","D:\\work\\react-pract\\social-network\\src\\api\\api.ts",[],"D:\\work\\react-pract\\social-network\\src\\hoc\\withAuthRedirect.tsx",[],"D:\\work\\react-pract\\social-network\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.tsx",[],"D:\\work\\react-pract\\social-network\\src\\components\\Login\\Login.tsx",["231"],"D:\\work\\react-pract\\social-network\\src\\redux\\app-reducer.ts",[],"D:\\work\\react-pract\\social-network\\src\\redux\\users-selectors.ts",[],"D:\\work\\react-pract\\social-network\\src\\utils\\object-helpers.ts",[],"D:\\work\\react-pract\\social-network\\src\\components\\Users\\User.tsx",["232"],"D:\\work\\react-pract\\social-network\\src\\index.tsx",[],"D:\\work\\react-pract\\social-network\\src\\components\\Profile\\ProfileInfo\\ProfileDataForm.tsx",[],"D:\\work\\react-pract\\social-network\\src\\components\\common\\Paginator\\Paginator.tsx",[],"D:\\work\\react-pract\\social-network\\src\\api\\security-api.ts",[],"D:\\work\\react-pract\\social-network\\src\\api\\users-api.ts",[],"D:\\work\\react-pract\\social-network\\src\\api\\auth-api.ts",[],"D:\\work\\react-pract\\social-network\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.tsx",[],"D:\\work\\react-pract\\social-network\\src\\hoc\\withSuspense.tsx",[],"D:\\work\\react-pract\\social-network\\src\\utils\\validators\\validators.ts",[],"D:\\work\\react-pract\\social-network\\src\\components\\Profile\\MyPosts\\AddPostForm\\AddPostForm.tsx",[],"D:\\work\\react-pract\\social-network\\src\\api\\profile-api.ts",[],"D:\\work\\react-pract\\social-network\\src\\components\\common\\Preloader\\Preloader.tsx",["233","234"],"import React from 'react';\r\nimport preloader from \"../../../assets/images/preloader.svg\";\r\n\r\ntype PropsType = {\r\n}\r\n\r\nlet Preloader: React.FC = () => {\r\n    return <div  style={ { backgroundColor: 'white' } }>\r\n        <img src={preloader} />\r\n    </div>\r\n}\r\n\r\nexport default Preloader;\r\n","D:\\work\\react-pract\\social-network\\src\\components\\Dialogs\\AddMessageForm\\AddMessageForm.tsx",["235","236","237"],"D:\\work\\react-pract\\social-network\\src\\components\\Users\\UsersSearchForm.tsx",[],"D:\\work\\react-pract\\social-network\\src\\App.tsx",[],"D:\\work\\react-pract\\social-network\\src\\redux\\auth-selectors.ts",[],"D:\\work\\react-pract\\social-network\\src\\pages\\Chat\\ChatPage.tsx",["238"],"D:\\work\\react-pract\\social-network\\src\\components\\common\\FormsControls\\FormsControls.tsx",["239"],{"ruleId":"240","replacedBy":"241"},{"ruleId":"242","replacedBy":"243"},{"ruleId":"244","severity":1,"message":"245","line":19,"column":17,"nodeType":"246","endLine":19,"endColumn":20},{"ruleId":"244","severity":1,"message":"245","line":22,"column":17,"nodeType":"246","endLine":22,"endColumn":20},{"ruleId":"244","severity":1,"message":"245","line":25,"column":17,"nodeType":"246","endLine":25,"endColumn":20},{"ruleId":"240","replacedBy":"241"},{"ruleId":"242","replacedBy":"243"},{"ruleId":"240","replacedBy":"247"},{"ruleId":"242","replacedBy":"248"},{"ruleId":"249","severity":1,"message":"250","line":5,"column":9,"nodeType":"251","messageId":"252","endLine":5,"endColumn":17},{"ruleId":"240","replacedBy":"253"},{"ruleId":"242","replacedBy":"254"},{"ruleId":"240","replacedBy":"255"},{"ruleId":"242","replacedBy":"256"},{"ruleId":"257","severity":1,"message":"258","line":44,"column":17,"nodeType":"246","endLine":44,"endColumn":87},{"ruleId":"257","severity":1,"message":"258","line":12,"column":7,"nodeType":"246","endLine":12,"endColumn":108},{"ruleId":"249","severity":1,"message":"259","line":3,"column":9,"nodeType":"251","messageId":"252","endLine":3,"endColumn":17},{"ruleId":"260","severity":1,"message":"261","line":43,"column":67,"nodeType":"262","messageId":"263","endLine":43,"endColumn":69},{"ruleId":"249","severity":1,"message":"264","line":2,"column":6,"nodeType":"251","messageId":"252","endLine":2,"endColumn":22},{"ruleId":"249","severity":1,"message":"265","line":1,"column":8,"nodeType":"251","messageId":"252","endLine":1,"endColumn":13},{"ruleId":"260","severity":1,"message":"261","line":53,"column":65,"nodeType":"262","messageId":"263","endLine":53,"endColumn":67},{"ruleId":"260","severity":1,"message":"266","line":103,"column":29,"nodeType":"262","messageId":"263","endLine":103,"endColumn":31},{"ruleId":"267","severity":1,"message":"268","line":54,"column":8,"nodeType":"269","endLine":54,"endColumn":10,"suggestions":"270"},{"ruleId":"267","severity":1,"message":"271","line":61,"column":8,"nodeType":"269","endLine":61,"endColumn":29,"suggestions":"272"},{"ruleId":"273","severity":1,"message":"274","line":26,"column":5,"nodeType":"275","messageId":"276","endLine":28,"endColumn":6},{"ruleId":"260","severity":1,"message":"261","line":53,"column":44,"nodeType":"262","messageId":"263","endLine":53,"endColumn":46},{"ruleId":"249","severity":1,"message":"277","line":6,"column":9,"nodeType":"251","messageId":"252","endLine":6,"endColumn":15},{"ruleId":"257","severity":1,"message":"258","line":23,"column":29,"nodeType":"246","endLine":23,"endColumn":53},{"ruleId":"257","severity":1,"message":"258","line":20,"column":25,"nodeType":"246","endLine":21,"endColumn":60},{"ruleId":"249","severity":1,"message":"278","line":4,"column":6,"nodeType":"251","messageId":"252","endLine":4,"endColumn":15},{"ruleId":"257","severity":1,"message":"258","line":9,"column":9,"nodeType":"246","endLine":9,"endColumn":32},{"ruleId":"249","severity":1,"message":"279","line":2,"column":9,"nodeType":"251","messageId":"252","endLine":2,"endColumn":14},{"ruleId":"249","severity":1,"message":"280","line":3,"column":22,"nodeType":"251","messageId":"252","endLine":3,"endColumn":27},{"ruleId":"249","severity":1,"message":"281","line":6,"column":9,"nodeType":"251","messageId":"252","endLine":6,"endColumn":28},{"ruleId":"257","severity":1,"message":"258","line":46,"column":9,"nodeType":"246","endLine":46,"endColumn":59},{"ruleId":"249","severity":1,"message":"281","line":6,"column":9,"nodeType":"251","messageId":"252","endLine":6,"endColumn":28},"no-native-reassign",["282"],"no-negated-in-lhs",["283"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["282"],["283"],"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar",["282"],["283"],["282"],["283"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'usersAPI' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'InitialStateType' is defined but never used.","'React' is defined but never used.","Expected '===' and instead saw '=='.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentPage', 'dispatch', 'filter', 'history.location.search', and 'pageSize'. Either include them or remove the dependency array.","ArrayExpression",["284"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["285"],"@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Action' is defined but never used.","'PropsType' is defined but never used.","'Field' is defined but never used.","'Input' is defined but never used.","'LoginFormValuesType' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},"Update the dependencies array to be: [currentPage, dispatch, filter, history.location.search, pageSize]",{"range":"290","text":"291"},"Update the dependencies array to be: [filter, currentPage, history]",{"range":"292","text":"293"},[1881,1883],"[currentPage, dispatch, filter, history.location.search, pageSize]",[2080,2101],"[filter, currentPage, history]"]