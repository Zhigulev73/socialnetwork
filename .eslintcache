[{"D:\\work\\react-pract\\social-network\\src\\serviceWorker.js":"1","D:\\work\\react-pract\\social-network\\src\\components\\Navbar\\Navbar.tsx":"2","D:\\work\\react-pract\\social-network\\src\\components\\Header\\Header.tsx":"3","D:\\work\\react-pract\\social-network\\src\\components\\Profile\\Profile.tsx":"4","D:\\work\\react-pract\\social-network\\src\\components\\Dialogs\\Dialogs.tsx":"5","D:\\work\\react-pract\\social-network\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"6","D:\\work\\react-pract\\social-network\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"7","D:\\work\\react-pract\\social-network\\src\\components\\Dialogs\\Message\\Message.tsx":"8","D:\\work\\react-pract\\social-network\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx":"9","D:\\work\\react-pract\\social-network\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"10","D:\\work\\react-pract\\social-network\\src\\redux\\profile-reducer.ts":"11","D:\\work\\react-pract\\social-network\\src\\redux\\dialogs-reducer.ts":"12","D:\\work\\react-pract\\social-network\\src\\redux\\sidebar-reducer.ts":"13","D:\\work\\react-pract\\social-network\\src\\redux\\redux-store.ts":"14","D:\\work\\react-pract\\social-network\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx":"15","D:\\work\\react-pract\\social-network\\src\\components\\Dialogs\\DialogsContainer.tsx":"16","D:\\work\\react-pract\\social-network\\src\\components\\Users\\UsersContainer.tsx":"17","D:\\work\\react-pract\\social-network\\src\\redux\\users-reducer.ts":"18","D:\\work\\react-pract\\social-network\\src\\components\\Users\\Users.tsx":"19","D:\\work\\react-pract\\social-network\\src\\components\\Profile\\ProfileContainer.tsx":"20","D:\\work\\react-pract\\social-network\\src\\redux\\auth-reducer.ts":"21","D:\\work\\react-pract\\social-network\\src\\api\\api.ts":"22","D:\\work\\react-pract\\social-network\\src\\hoc\\withAuthRedirect.tsx":"23","D:\\work\\react-pract\\social-network\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.tsx":"24","D:\\work\\react-pract\\social-network\\src\\components\\Login\\Login.tsx":"25","D:\\work\\react-pract\\social-network\\src\\redux\\app-reducer.ts":"26","D:\\work\\react-pract\\social-network\\src\\redux\\users-selectors.ts":"27","D:\\work\\react-pract\\social-network\\src\\utils\\object-helpers.ts":"28","D:\\work\\react-pract\\social-network\\src\\components\\Users\\User.tsx":"29","D:\\work\\react-pract\\social-network\\src\\index.tsx":"30","D:\\work\\react-pract\\social-network\\src\\components\\Profile\\ProfileInfo\\ProfileDataForm.tsx":"31","D:\\work\\react-pract\\social-network\\src\\components\\common\\Paginator\\Paginator.tsx":"32","D:\\work\\react-pract\\social-network\\src\\api\\security-api.ts":"33","D:\\work\\react-pract\\social-network\\src\\api\\users-api.ts":"34","D:\\work\\react-pract\\social-network\\src\\api\\auth-api.ts":"35","D:\\work\\react-pract\\social-network\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.tsx":"36","D:\\work\\react-pract\\social-network\\src\\hoc\\withSuspense.tsx":"37","D:\\work\\react-pract\\social-network\\src\\utils\\validators\\validators.ts":"38","D:\\work\\react-pract\\social-network\\src\\components\\Profile\\MyPosts\\AddPostForm\\AddPostForm.tsx":"39","D:\\work\\react-pract\\social-network\\src\\api\\profile-api.ts":"40","D:\\work\\react-pract\\social-network\\src\\components\\common\\Preloader\\Preloader.tsx":"41","D:\\work\\react-pract\\social-network\\src\\components\\Dialogs\\AddMessageForm\\AddMessageForm.tsx":"42","D:\\work\\react-pract\\social-network\\src\\components\\Users\\UsersSearchForm.tsx":"43","D:\\work\\react-pract\\social-network\\src\\App.tsx":"44","D:\\work\\react-pract\\social-network\\src\\redux\\auth-selectors.ts":"45"},{"size":5083,"mtime":1616752337283,"results":"46","hashOfConfig":"47"},{"size":984,"mtime":1616753084722,"results":"48","hashOfConfig":"47"},{"size":1986,"mtime":1616842812297,"results":"49","hashOfConfig":"47"},{"size":918,"mtime":1616752337271,"results":"50","hashOfConfig":"47"},{"size":1360,"mtime":1616752337263,"results":"51","hashOfConfig":"47"},{"size":1341,"mtime":1616179485533,"results":"52","hashOfConfig":"47"},{"size":3227,"mtime":1616752337272,"results":"53","hashOfConfig":"47"},{"size":257,"mtime":1616752774023,"results":"54","hashOfConfig":"47"},{"size":424,"mtime":1616752337263,"results":"55","hashOfConfig":"47"},{"size":485,"mtime":1616752337271,"results":"56","hashOfConfig":"47"},{"size":3831,"mtime":1616752337281,"results":"57","hashOfConfig":"47"},{"size":1358,"mtime":1616752337281,"results":"58","hashOfConfig":"47"},{"size":189,"mtime":1616752337282,"results":"59","hashOfConfig":"47"},{"size":1347,"mtime":1616754693190,"results":"60","hashOfConfig":"47"},{"size":567,"mtime":1616752337270,"results":"61","hashOfConfig":"47"},{"size":546,"mtime":1616752337263,"results":"62","hashOfConfig":"47"},{"size":521,"mtime":1616765749635,"results":"63","hashOfConfig":"47"},{"size":4836,"mtime":1616761929648,"results":"64","hashOfConfig":"47"},{"size":3166,"mtime":1616841128607,"results":"65","hashOfConfig":"47"},{"size":2764,"mtime":1616752337271,"results":"66","hashOfConfig":"47"},{"size":2904,"mtime":1616752337279,"results":"67","hashOfConfig":"47"},{"size":677,"mtime":1616762251042,"results":"68","hashOfConfig":"47"},{"size":921,"mtime":1616752337277,"results":"69","hashOfConfig":"47"},{"size":1113,"mtime":1615807566822,"results":"70","hashOfConfig":"47"},{"size":2444,"mtime":1616766407258,"results":"71","hashOfConfig":"47"},{"size":944,"mtime":1616754643380,"results":"72","hashOfConfig":"47"},{"size":934,"mtime":1616761929648,"results":"73","hashOfConfig":"47"},{"size":267,"mtime":1616752337284,"results":"74","hashOfConfig":"47"},{"size":1865,"mtime":1616765569212,"results":"75","hashOfConfig":"47"},{"size":492,"mtime":1616752337278,"results":"76","hashOfConfig":"47"},{"size":1925,"mtime":1616752337272,"results":"77","hashOfConfig":"47"},{"size":1826,"mtime":1616752337276,"results":"78","hashOfConfig":"47"},{"size":263,"mtime":1616752337260,"results":"79","hashOfConfig":"47"},{"size":660,"mtime":1616761520182,"results":"80","hashOfConfig":"47"},{"size":767,"mtime":1616752337260,"results":"81","hashOfConfig":"47"},{"size":1229,"mtime":1616752337273,"results":"82","hashOfConfig":"47"},{"size":289,"mtime":1616752337277,"results":"83","hashOfConfig":"47"},{"size":401,"mtime":1616752337285,"results":"84","hashOfConfig":"47"},{"size":979,"mtime":1616752337270,"results":"85","hashOfConfig":"47"},{"size":1110,"mtime":1616752337260,"results":"86","hashOfConfig":"47"},{"size":288,"mtime":1616752337277,"results":"87","hashOfConfig":"47"},{"size":1144,"mtime":1616752543332,"results":"88","hashOfConfig":"47"},{"size":1884,"mtime":1616838896774,"results":"89","hashOfConfig":"47"},{"size":5609,"mtime":1616842821456,"results":"90","hashOfConfig":"47"},{"size":238,"mtime":1616842047941,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"86in82",{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"104"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"100"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"104"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"100"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"104"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"D:\\work\\react-pract\\social-network\\src\\serviceWorker.js",[],"D:\\work\\react-pract\\social-network\\src\\components\\Navbar\\Navbar.tsx",["192","193","194"],"D:\\work\\react-pract\\social-network\\src\\components\\Header\\Header.tsx",[],"D:\\work\\react-pract\\social-network\\src\\components\\Profile\\Profile.tsx",[],["195","196"],"D:\\work\\react-pract\\social-network\\src\\components\\Dialogs\\Dialogs.tsx",["197"],"import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\nimport {InitialStateType} from '../../redux/dialogs-reducer';\r\n\r\ntype PropsType = {\r\n    dialogsPage: InitialStateType\r\n    sendMessage: (messageText: string) => void\r\n}\r\n\r\nexport type NewMessageFormValuesType = {\r\n    newMessageBody: string\r\n}\r\n\r\nconst Dialogs: React.FC<PropsType> = (props) => {\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map( d => <DialogItem name={d.name} key={d.id} id={d.id} />  );\r\n    let messagesElements = state.messages.map( m => <Message message={m.message} key={m.id} /> );\r\n\r\n    let addNewMessage = (values: NewMessageFormValuesType) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                { dialogsElements }\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{ messagesElements }</div>\r\n            </div>\r\n            <AddMessageForm onSubmit={addNewMessage} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",["198","199"],"D:\\work\\react-pract\\social-network\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",[],["200","201"],"D:\\work\\react-pract\\social-network\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx",["202"],"D:\\work\\react-pract\\social-network\\src\\components\\Dialogs\\Message\\Message.tsx",[],["203","204"],"D:\\work\\react-pract\\social-network\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx",[],"D:\\work\\react-pract\\social-network\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",["205"],"D:\\work\\react-pract\\social-network\\src\\redux\\profile-reducer.ts",["206","207"],"import {FormAction, stopSubmit} from \"redux-form\";\r\nimport {PhotosType, PostType, ProfileType} from '../types/types';\r\nimport {usersAPI} from '../api/users-api';\r\nimport {profileAPI} from '../api/profile-api';\r\nimport {BaseThunkType, InferActionsTypes} from './redux-store';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n        {id: 3, message: 'Blabla', likesCount: 11},\r\n        {id: 4, message: 'Dada', likesCount: 11}\r\n    ] as Array<PostType>,\r\n    profile: null as ProfileType | null,\r\n    status: '',\r\n}\r\n\r\nconst profileReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case 'SN/PROFILE/ADD-POST': {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            };\r\n        }\r\n        case 'SN/PROFILE/SET_STATUS': {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case 'SN/PROFILE/SET_USER_PROFILE': {\r\n            return {...state, profile: action.profile}\r\n        }\r\n\r\n        case 'SN/PROFILE/DELETE_POST':\r\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)}\r\n\r\n        case 'SN/PROFILE/SAVE_PHOTO_SUCCESS':\r\n            return {...state, profile: {...state.profile, photos: action.photos} as ProfileType}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const actions = {\r\n    addPostActionCreator: (newPostText: string) => ({type: 'SN/PROFILE/ADD-POST', newPostText} as const),\r\n    setUserProfile: (profile: ProfileType) => ({type: 'SN/PROFILE/SET_USER_PROFILE', profile} as const),\r\n    setStatus: (status: string) => ({type: 'SN/PROFILE/SET_STATUS', status} as const),\r\n    deletePost: (postId: number) => ({type: 'SN/PROFILE/DELETE_POST', postId} as const),\r\n    savePhotoSuccess: (photos: PhotosType) => ({type: 'SN/PROFILE/SAVE_PHOTO_SUCCESS', photos} as const)\r\n}\r\n\r\nexport const getUserProfile = (userId: number): ThunkType => async (dispatch) => {\r\n    const data = await profileAPI.getProfile(userId)\r\n    dispatch(actions.setUserProfile(data))\r\n}\r\n\r\nexport const getStatus = (userId: number): ThunkType => async (dispatch) => {\r\n    let data = await profileAPI.getStatus(userId)\r\n    dispatch(actions.setStatus(data))\r\n}\r\n\r\nexport const updateStatus = (status: string): ThunkType => async (dispatch) => {\r\n    try {\r\n        let data = await profileAPI.updateStatus(status)\r\n\r\n        if (data.resultCode === 0) {\r\n            dispatch(actions.setStatus(status))\r\n        }\r\n    } catch(error) {\r\n        //\r\n    }\r\n}\r\n\r\nexport const savePhoto = (file: File): ThunkType => async (dispatch) => {\r\n    let data = await profileAPI.savePhoto(file)\r\n\r\n    if (data.resultCode === 0) {\r\n        dispatch(actions.savePhotoSuccess(data.data.photos))\r\n    }\r\n}\r\n\r\nexport const saveProfile = (profile: ProfileType): ThunkType => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId\r\n    const data = await profileAPI.saveProfile(profile)\r\n\r\n    if (data.resultCode === 0) {\r\n        if (userId != null) {\r\n            dispatch(getUserProfile(userId))\r\n        } else {\r\n            throw new Error(\"userId can't be null\")\r\n        }\r\n    } else {\r\n        dispatch(stopSubmit(\"edit-profile\", {_error: data.messages[0] }))\r\n        return Promise.reject(data.messages[0])\r\n    }\r\n}\r\n\r\nexport default profileReducer\r\n\r\nexport type InitialStateType = typeof initialState\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsType | FormAction>\r\n","D:\\work\\react-pract\\social-network\\src\\redux\\dialogs-reducer.ts",[],"D:\\work\\react-pract\\social-network\\src\\redux\\sidebar-reducer.ts",["208"],"let initialState = {}\r\ntype InitialStateType = typeof initialState\r\nconst sidebarReducer = (state = initialState, action: any) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;\r\n","D:\\work\\react-pract\\social-network\\src\\redux\\redux-store.ts",[],"D:\\work\\react-pract\\social-network\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx",["209"],"D:\\work\\react-pract\\social-network\\src\\components\\Dialogs\\DialogsContainer.tsx",[],"D:\\work\\react-pract\\social-network\\src\\components\\Users\\UsersContainer.tsx",[],"D:\\work\\react-pract\\social-network\\src\\redux\\users-reducer.ts",["210","211"],"import {updateObjectInArray} from '../utils/object-helpers'\r\nimport {UserType} from '../types/types'\r\nimport {BaseThunkType, InferActionsTypes} from './redux-store'\r\nimport {Dispatch} from 'redux'\r\nimport {usersAPI} from '../api/users-api'\r\nimport {APIResponseType} from '../api/api'\r\n\r\nlet initialState = {\r\n    users: [] as Array<UserType>,\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [] as Array<number>, //array of users ids,\r\n    filter: {\r\n        term: '',\r\n        friend: null as null | boolean\r\n    }\r\n}\r\n\r\nconst usersReducer = (state = initialState, action: ActionsTypes): InitialState => {\r\n    switch (action.type) {\r\n        case 'SN/USERS/FOLLOW':\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\r\n            }\r\n        case 'SN/USERS/UNFOLLOW':\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\r\n            }\r\n        case 'SN/USERS/SET_USERS': {\r\n            return {...state, users: action.users}\r\n        }\r\n        case 'SN/USERS/SET_CURRENT_PAGE': {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case 'SN/USERS/SET_TOTAL_USERS_COUNT': {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case 'SN/USERS/TOGGLE_IS_FETCHING': {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case 'SN/USERS/SET_FILTER': {\r\n            return {...state, filter: action.payload}\r\n        }\r\n        case 'SN/USERS/TOGGLE_IS_FOLLOWING_PROGRESS': {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    followSuccess: (userId: number) => ({type: 'SN/USERS/FOLLOW', userId} as const),\r\n    unfollowSuccess: (userId: number) => ({type: 'SN/USERS/UNFOLLOW', userId} as const),\r\n    setUsers: (users: Array<UserType>) => ({type: 'SN/USERS/SET_USERS', users} as const),\r\n    setCurrentPage: (currentPage: number) => ({type: 'SN/USERS/SET_CURRENT_PAGE', currentPage} as const),\r\n    setFilter: (filter: FilterType) => ({type: 'SN/USERS/SET_FILTER', payload: filter} as const),\r\n    setTotalUsersCount: (totalUsersCount: number) => ({\r\n        type: 'SN/USERS/SET_TOTAL_USERS_COUNT',\r\n        count: totalUsersCount\r\n    } as const),\r\n    toggleIsFetching: (isFetching: boolean) => ({\r\n        type: 'SN/USERS/TOGGLE_IS_FETCHING',\r\n        isFetching\r\n    } as const),\r\n    toggleFollowingProgress: (isFetching: boolean, userId: number) => ({\r\n        type: 'SN/USERS/TOGGLE_IS_FOLLOWING_PROGRESS',\r\n        isFetching,\r\n        userId\r\n    } as const)\r\n}\r\n\r\nexport const requestUsers = (page: number,\r\n                             pageSize: number, filter: FilterType): ThunkType => {\r\n    return async (dispatch, getState) => {\r\n        dispatch(actions.toggleIsFetching(true))\r\n        dispatch(actions.setCurrentPage(page))\r\n        dispatch(actions.setFilter(filter))\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize, filter.term, filter.friend)\r\n        dispatch(actions.toggleIsFetching(false))\r\n        dispatch(actions.setUsers(data.items))\r\n        dispatch(actions.setTotalUsersCount(data.totalCount))\r\n    }\r\n}\r\n\r\nconst _followUnfollowFlow = async (dispatch: Dispatch<ActionsTypes>,\r\n                                   userId: number,\r\n                                   apiMethod: (userId: number) => Promise<APIResponseType>,\r\n                                   actionCreator: (userId: number) => ActionsTypes) => {\r\n    dispatch(actions.toggleFollowingProgress(true, userId))\r\n    let response = await apiMethod(userId)\r\n\r\n    if (response.resultCode == 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(actions.toggleFollowingProgress(false, userId))\r\n}\r\n\r\nexport const follow = (userId: number): ThunkType => {\r\n    return async (dispatch) => {\r\n        await _followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), actions.followSuccess)\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId: number): ThunkType => {\r\n    return async (dispatch) => {\r\n        await _followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), actions.unfollowSuccess)\r\n    }\r\n}\r\n\r\nexport default usersReducer\r\n\r\nexport type InitialState = typeof initialState\r\nexport type FilterType = typeof initialState.filter\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsTypes>\r\n","D:\\work\\react-pract\\social-network\\src\\components\\Users\\Users.tsx",["212","213"],"import React, {FC, useEffect} from 'react'\r\nimport Paginator from '../common/Paginator/Paginator'\r\nimport User from './User'\r\nimport {UsersSearchForm} from './UsersSearchForm'\r\nimport {FilterType, requestUsers} from '../../redux/users-reducer'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers,\r\n    getUsersFilter\r\n} from \"../../redux/users-selectors\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport * as queryString from \"querystring\";\r\n\r\ntype PropsType = {}\r\n\r\n\r\nexport const Users: FC<PropsType> = (props) => {\r\n\r\n    const users = useSelector(getUsers)\r\n    const totalUsersCount = useSelector(getTotalUsersCount)\r\n    const currentPage = useSelector(getCurrentPage)\r\n    const pageSize = useSelector(getPageSize)\r\n    const filter = useSelector(getUsersFilter)\r\n    const followingInProgress = useSelector(getFollowingInProgress)\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        const parsed = queryString.parse(history.location.search.substr(1)) as {term: string, page: string, friend: string}\r\n\r\n        let actualPage = currentPage\r\n        let actualFilter = filter\r\n        if(!!parsed.page) actualPage = Number(parsed.page)\r\n        if(!!parsed.term) actualFilter = {...actualFilter, term: parsed.term as string}\r\n        switch (parsed.friend) {\r\n            case 'null':\r\n                actualFilter = {...actualFilter, friend: null}\r\n                break;\r\n            case 'true':\r\n                actualFilter = {...actualFilter, friend: true}\r\n                break;\r\n            case 'false':\r\n                actualFilter = {...actualFilter, friend: false}\r\n                break;\r\n\r\n        }\r\n\r\n        dispatch(requestUsers(actualPage, pageSize, actualFilter))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        history.push({\r\n            pathname: '/developers',\r\n            search: `?term=${filter.term}&friend=${filter.friend}&page=${currentPage}`\r\n        })\r\n    }, [filter, currentPage])\r\n\r\n    const onFilterChanged = (filter: FilterType) => {\r\n        dispatch(requestUsers(1, pageSize, filter))\r\n    }\r\n\r\n    const onPageChanged = (pageNumber: number) => {\r\n        dispatch(requestUsers(pageNumber, pageSize, filter))\r\n    }\r\n\r\n    const unfollow = (userId: number) => {\r\n        dispatch(unfollow(userId))\r\n    }\r\n    const follow = (userId: number) => {\r\n        dispatch(follow(userId))\r\n    }\r\n\r\n\r\n    return <div>\r\n\r\n        <UsersSearchForm onFilterChanged={onFilterChanged}/>\r\n\r\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                   totalItemsCount={totalUsersCount} pageSize={pageSize}/>\r\n        <div>\r\n            {\r\n                users.map(u => <User user={u}\r\n                                     followingInProgress={followingInProgress}\r\n                                     key={u.id}\r\n                                     unfollow={unfollow}\r\n                                     follow={follow}\r\n                    />\r\n                )\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\n","D:\\work\\react-pract\\social-network\\src\\components\\Profile\\ProfileContainer.tsx",["214","215"],"D:\\work\\react-pract\\social-network\\src\\redux\\auth-reducer.ts",["216"],"D:\\work\\react-pract\\social-network\\src\\api\\api.ts",[],"D:\\work\\react-pract\\social-network\\src\\hoc\\withAuthRedirect.tsx",[],"D:\\work\\react-pract\\social-network\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.tsx",[],"D:\\work\\react-pract\\social-network\\src\\components\\Login\\Login.tsx",["217"],"D:\\work\\react-pract\\social-network\\src\\redux\\app-reducer.ts",[],"D:\\work\\react-pract\\social-network\\src\\redux\\users-selectors.ts",[],"D:\\work\\react-pract\\social-network\\src\\utils\\object-helpers.ts",[],"D:\\work\\react-pract\\social-network\\src\\components\\Users\\User.tsx",["218"],"D:\\work\\react-pract\\social-network\\src\\index.tsx",[],"D:\\work\\react-pract\\social-network\\src\\components\\Profile\\ProfileInfo\\ProfileDataForm.tsx",[],"D:\\work\\react-pract\\social-network\\src\\components\\common\\Paginator\\Paginator.tsx",[],"D:\\work\\react-pract\\social-network\\src\\api\\security-api.ts",[],"D:\\work\\react-pract\\social-network\\src\\api\\users-api.ts",[],"D:\\work\\react-pract\\social-network\\src\\api\\auth-api.ts",[],"D:\\work\\react-pract\\social-network\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.tsx",[],"D:\\work\\react-pract\\social-network\\src\\hoc\\withSuspense.tsx",[],"D:\\work\\react-pract\\social-network\\src\\utils\\validators\\validators.ts",[],"D:\\work\\react-pract\\social-network\\src\\components\\Profile\\MyPosts\\AddPostForm\\AddPostForm.tsx",[],"D:\\work\\react-pract\\social-network\\src\\api\\profile-api.ts",[],"D:\\work\\react-pract\\social-network\\src\\components\\common\\Preloader\\Preloader.tsx",["219","220"],"import React from 'react';\r\nimport preloader from \"../../../assets/images/preloader.svg\";\r\n\r\ntype PropsType = {\r\n}\r\n\r\nlet Preloader: React.FC = () => {\r\n    return <div  style={ { backgroundColor: 'white' } }>\r\n        <img src={preloader} />\r\n    </div>\r\n}\r\n\r\nexport default Preloader;\r\n","D:\\work\\react-pract\\social-network\\src\\components\\Dialogs\\AddMessageForm\\AddMessageForm.tsx",["221","222","223"],"D:\\work\\react-pract\\social-network\\src\\components\\Users\\UsersSearchForm.tsx",[],"D:\\work\\react-pract\\social-network\\src\\App.tsx",[],"D:\\work\\react-pract\\social-network\\src\\redux\\auth-selectors.ts",[],{"ruleId":"224","severity":1,"message":"225","line":19,"column":17,"nodeType":"226","endLine":19,"endColumn":20},{"ruleId":"224","severity":1,"message":"225","line":22,"column":17,"nodeType":"226","endLine":22,"endColumn":20},{"ruleId":"224","severity":1,"message":"225","line":25,"column":17,"nodeType":"226","endLine":25,"endColumn":20},{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","replacedBy":"230"},{"ruleId":"231","severity":1,"message":"232","line":5,"column":9,"nodeType":"233","messageId":"234","endLine":5,"endColumn":17},{"ruleId":"227","replacedBy":"235"},{"ruleId":"229","replacedBy":"236"},{"ruleId":"227","replacedBy":"237"},{"ruleId":"229","replacedBy":"238"},{"ruleId":"239","severity":1,"message":"240","line":44,"column":17,"nodeType":"226","endLine":44,"endColumn":87},{"ruleId":"227","replacedBy":"241"},{"ruleId":"229","replacedBy":"242"},{"ruleId":"239","severity":1,"message":"240","line":12,"column":7,"nodeType":"226","endLine":12,"endColumn":108},{"ruleId":"231","severity":1,"message":"243","line":3,"column":9,"nodeType":"233","messageId":"234","endLine":3,"endColumn":17},{"ruleId":"244","severity":1,"message":"245","line":43,"column":67,"nodeType":"246","messageId":"247","endLine":43,"endColumn":69},{"ruleId":"231","severity":1,"message":"248","line":2,"column":6,"nodeType":"233","messageId":"234","endLine":2,"endColumn":22},{"ruleId":"231","severity":1,"message":"249","line":1,"column":8,"nodeType":"233","messageId":"234","endLine":1,"endColumn":13},{"ruleId":"244","severity":1,"message":"245","line":53,"column":65,"nodeType":"246","messageId":"247","endLine":53,"endColumn":67},{"ruleId":"244","severity":1,"message":"250","line":103,"column":29,"nodeType":"246","messageId":"247","endLine":103,"endColumn":31},{"ruleId":"251","severity":1,"message":"252","line":54,"column":8,"nodeType":"253","endLine":54,"endColumn":10,"suggestions":"254"},{"ruleId":"251","severity":1,"message":"255","line":61,"column":8,"nodeType":"253","endLine":61,"endColumn":29,"suggestions":"256"},{"ruleId":"257","severity":1,"message":"258","line":26,"column":5,"nodeType":"259","messageId":"260","endLine":28,"endColumn":6},{"ruleId":"244","severity":1,"message":"245","line":53,"column":44,"nodeType":"246","messageId":"247","endLine":53,"endColumn":46},{"ruleId":"231","severity":1,"message":"261","line":6,"column":9,"nodeType":"233","messageId":"234","endLine":6,"endColumn":15},{"ruleId":"239","severity":1,"message":"240","line":23,"column":29,"nodeType":"226","endLine":23,"endColumn":53},{"ruleId":"239","severity":1,"message":"240","line":20,"column":25,"nodeType":"226","endLine":21,"endColumn":60},{"ruleId":"231","severity":1,"message":"262","line":4,"column":6,"nodeType":"233","messageId":"234","endLine":4,"endColumn":15},{"ruleId":"239","severity":1,"message":"240","line":9,"column":9,"nodeType":"226","endLine":9,"endColumn":32},{"ruleId":"231","severity":1,"message":"263","line":2,"column":9,"nodeType":"233","messageId":"234","endLine":2,"endColumn":14},{"ruleId":"231","severity":1,"message":"264","line":3,"column":22,"nodeType":"233","messageId":"234","endLine":3,"endColumn":27},{"ruleId":"231","severity":1,"message":"265","line":6,"column":9,"nodeType":"233","messageId":"234","endLine":6,"endColumn":28},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["266"],"no-negated-in-lhs",["267"],"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar",["266"],["267"],["266"],["267"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["266"],["267"],"'usersAPI' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'InitialStateType' is defined but never used.","'React' is defined but never used.","Expected '===' and instead saw '=='.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentPage', 'dispatch', 'filter', 'history.location.search', and 'pageSize'. Either include them or remove the dependency array.","ArrayExpression",["268"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["269"],"@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Action' is defined but never used.","'PropsType' is defined but never used.","'Field' is defined but never used.","'Input' is defined but never used.","'LoginFormValuesType' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"270","fix":"271"},{"desc":"272","fix":"273"},"Update the dependencies array to be: [currentPage, dispatch, filter, history.location.search, pageSize]",{"range":"274","text":"275"},"Update the dependencies array to be: [filter, currentPage, history]",{"range":"276","text":"277"},[1881,1883],"[currentPage, dispatch, filter, history.location.search, pageSize]",[2080,2101],"[filter, currentPage, history]"]